diff --git a/data/Thermodyn2XML_vanilla_7_11_05.py b/data/Thermodyn2XML_vanilla_7_11_05.py
index 116033a..81d4c9a 100644
--- a/data/Thermodyn2XML_vanilla_7_11_05.py
+++ b/data/Thermodyn2XML_vanilla_7_11_05.py
@@ -61,9 +61,9 @@ pattern_C0='(?P<c0>(?<=C0=)(?:\d+.\d+|.\d+))'
 pattern_A0_B0='(?P<a0_b0>(?<=A0=B0=)(?:\d+.\d+|.\d+))'
 pattern_Ir='(?P<ir>(?<=IR=)(?:\+|\-|\~|)\d+.\d+|(?<=IR=).\d+|(?<=IR)(?:\([A-Z0-9\-\*]*\)=)*(?:\+|\-|\~|)\d+.\d+|(?<=IR = )(?:\+|\-|\~|)\d+.\d+|(?<=IR = )(?:\+|\-|\~|).\d+|(?<=IR)(?:\([A-Z0-9\-\*]*\)\s+=)*(?:\+|\-|\~|)\s+\d+.\d+)'
 pattern_rosym='(?P<rosym>(?<=ROSYM=)\d+|(?<=ROSYM=)\s*\d+|(?<=ROSYM)(?:\([A-Z0-9\-]*\)=)*\d+|(?<=ROSYM =)\s+\d+|(?<=ROSYM =)\s+\d+|(?<=ROSYM)(?:\([A-Z0-9\-]*\)\s+=)*\s+\d+|(?<=ROSYM=)\d+.)'
-pattern_v1=r'(?P<v1>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|\KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
-pattern_v2=r'(?P<v2>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|\KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
-pattern_v3=r'(?P<v3>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|\KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
+pattern_v1=r'(?P<v1>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
+pattern_v2=r'(?P<v2>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
+pattern_v3=r'(?P<v3>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
 pattern_nu='(?P<nu>(?<=NU=)(?:[\d+\(\d+\)\,\s+\.\d+\(\d+\)]*)|(?<=NU =)(?:[\d+\(\d+\)\,\s+\.\d+\(\d+\)]*))'
 pattern_x='(?P<x>(?:X\d+=)(?:\+|\-|\s+|\~|)(?:[0-9\.]*))'
 pattern_y='(?P<y>(?:Y\d+=)(?:\+|\-|\s+|\~|)(?:[0-9\.]*))'
@@ -102,7 +102,7 @@ pattern_A0_B0_d='(?P<a0_b0_d>(?:A0=B0=)(?:\d+.\d+|.\d+))'
 pattern_Ir_d='(?P<ir_d>(?:IR=)(?:\+|\-|\~|)\d+.\d+|(?:IR=).\d+|(?:IR)(?:\([A-Z0-9\-\*]*\)=)*(?:\+|\-|\~|)\d+.\d+|(?:IR = )(?:\+|\-|\~|)\d+.\d+|(?:IR = )(?:\+|\-|\~|).\d+|(?:IR)(?:\([A-Z0-9\-\*]*\)\s+=)*(?:\+|\-|\~|)\s+\d+.\d+)'
 #pattern_Ir_d='(?P<ir_d>(?:IR=)\d+.\d+|(?:IR=).\d+|(?:IR)(?:\([A-Z0-9\-\*]*\)=)*\d+.\d+|(?<=IR = )\d+.\d+|(?:IR = ).\d+|(?:IR)(?:\([A-Z0-9\-\*]*\)\s+=)*\s+\d+.\d+)'
 pattern_rosym_d='(?P<rosym_d>(?:ROSYM=)\d+|(?:ROSYM=)\s*\d+|(?:ROSYM)(?:\([A-Z0-9\-]*\)=)*\d+|(?:ROSYM =)\s+\d+|(?:ROSYM =)\s+\d+|(?:ROSYM)(?:\([A-Z0-9\-]*\)\s+=)*\s+\d+|(?:ROSYM=)\d+.)'
-pattern_v1_d=r'(?P<v1_d>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|\KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
+pattern_v1_d=r'(?P<v1_d>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
 pattern_v2_d=r'(?P<v2_d>(?:))'
 pattern_v3_d=r'(?P<v3_d>(?:))'
 pattern_nu_d='(?P<nu_d>(?:NU=)(?:[\d+\(\d+\)\,\s+\.\d+\(\d+\)]*)|(?:NU =)(?:[\d+\(\d+\)\,\s+\.\d+\(\d+\)]*))'
@@ -131,8 +131,8 @@ coef_5_re=r"(?:HF\d+(?:\(S|s\))|HF\d+|REF\=).*"
 pv1= re.compile('(?:V\(1\)|V1|V\(1\)|V1|V\([A-Z0-9\-]*\)1|V\([A-Z0-9\-]*\)1)')
 pv2= re.compile('(?:V\(2\)|V2|V\(2\)|V2|V\([A-Z0-9\-]*\)2|V\([A-Z0-9\-]*\)2)')
 pv3= re.compile('(?:V\(3\)|V3|V\(3\)|V3|V\([A-Z0-9\-]*\)3|V\([A-Z0-9\-]*\)3)')
-dummy_v3_final=r'(?P<v3_d>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|\KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
-dummy_v2_final=r'(?P<v2_d>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|\KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
+dummy_v3_final=r'(?P<v3_d>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
+dummy_v2_final=r'(?P<v2_d>\bV(?:[A-Z0-9\-\(\)\s]*)(?:1|2|\(1\)|\(2\)|3|\(3\)|\))(?:\=|\s|)(?:[A-Z0-9\.\-\(\)]*)(?:[+CM|CM|\s+CM\s+|CM\s+|KCAL|\s+KCAL|\s+KCAL\s+|CAL|KCAL\/MOLE|KJ\/MOLE|\s+KCAL\/MOLE|\s+KJ\/MOLE|KJ|\s+KJ|\s|1\/CM\s\/\-\.0-9]*)(?=(?:\s| )))'
 dummy_3_vector=len(dummy_3)
 #########################################################################################
 # Some XML Tags
@@ -166,45 +166,45 @@ specie_re = r'(?:\d+-\d+-\d+|N/A).*\n(?:.|\n)*?(?=\d+-\d+-\d+(?:\s|)|N/A)(?!\d+-
 CAS_re = r'(\d+-\d+-\d+|\d+-\d+-\d+\?+|\d+-\d+-\d+\s+\?+|N/A)\s'
 phase_re = r".+1\s+\n?.+2\s+\n?.+\s3\s+\n?.+\s4\s"
 first_line_re = '(?P<formula>.{17}.?)' + \
-'(?P<source>TT?|tt?|RUS|rus|IU|P|p|G|g|J|j|B|b|L|l|CODA|coda|R|r|S|s|HF|hf|D|d|ATCT|ATcT|A|a|F|f|E|e|[TIPS]*|[tips]*)' + \
+'(?P<source>TT?|tt?|RUS|rus|IU|P|p|G|g|J|j|B|b|L|l|CODA|coda|R|r|S|s|HF|hf|D|d|ATCT|ATcT|ATcT/C|A|a|F|f|E|EG|e|[TIPS]*|[tips]*)' + \
 '\s*' + \
-'(?P<date>(?:/)?(?:\d\d|\d)?(?:/?)(?:\d\d|A))' + \
+'(?P<date>(?:/)?(?:\d\d|\d)?(?:/?)(?:\d\d|A)?)' + \
 '\s*' + \
-'(?:((?:\s*|\*+|\s*\*+)WARNING(?:!|\*+)\s*0?\.?)|' + \
+'(?:((?:\s*|\*+|\s*\*+)WARNING(?:(?:\s*.)?!|\*+)\s*0?\.?)|' + \
 '(?P<elem1>[A-Z]{1,2})\s*(?P<num_atoms1>-?\d+)(?:\.|\s)?(?:\s|\d+)?' + \
 '(?P<elem2>[A-Z]{0,2})\s*(?P<num_atoms2>-?\d+)(?:\.|\s)?(?:\s|\d+)?' + \
-'(?P<elem3>[A-Z]{0,2})\s*(?P<num_atoms3>-?\d+)(?:\.|\s)?(?:\s|\d+)?' + \
-'(?P<elem4>[A-Z]{0,2})\s*(?P<num_atoms4>-?\d+)(?:\.|\s)?(?:\s|\d+)?' + \
+'(?P<elem3>[A-Z]{0,2})\s*(?P<num_atoms3>-?\d*)(?:\.|\s)?(?:\s|\d+)?' + \
+'(?P<elem4>[A-Z]{0,2})\s*(?P<num_atoms4>-?\d*)(?:\.|\s)?(?:\s|\d+)?' + \
 ')' + \
 '(?P<phase>G|L|S|C)\s*' + \
 '(?P<t_low>\d*\.\d*)\s*' + \
 '(?P<t_high>\d*\.\d*)\s*' + \
-'(?P<calc_quality>A|B|C|D|E|F)?\s*' + \
+'(?P<calc_quality>A|B|b|BQr|C|D|E|F|\?)?\s*' + \
 '(?P<molecular_weight>\d*\.\d*)\s*'
 # (?P<formula>.{17}.?.?)(?P<source>TT?|RUS|IU|P|G|J|B|L|CODA|R|S|HF|D|A|E|F)\s*(?P<date>(?:/)?(?:\d\d|\d)?(?:/?)(?:\d\d))\s*(?:(\s*WARNING!\s*0?\.?)|(?P<elem1>[A-Z]{1,2})\s*(?P<num_atoms1>-?\d+)\.?(?P<elem2>[A-Z]{0,2})\s*(?P<num_atoms2>-?\d+)\.?(?P<elem3>[A-Z]{0,2})\s*(?P<num_atoms3>-?\d+)\.?(?P<elem4>[A-Z]{0,2})\s*(?P<num_atoms4>-?\d+)\.?)(?P<phase>G|L|S|C)\s*(?P<t_low>\d*\.\d*)\s*(?P<t_high>\d*\.\d*)\s*(?P<calc_quality>A|B|C|D|E|F)?\s*(?P<molecular_weight>\d*\.\d*)\s*
 ###########################################################################################################
 #                          Data preparation:
 ############### USE THESE COMMANDS IN UNIX SYSTEM ############################################
-#if len(sys.argv) != 2:
-#   print "Usage: ./Thermodyn2XML.py filename"
-#   sys.exit()
-#data = open(sys.argv[1], "r").read()
+if len(sys.argv) != 2:
+   print("Usage: ./Thermodyn2XML.py filename")
+   sys.exit()
+data = open(sys.argv[1], "r").read()
 # data = open(r'1.txt', "r").read() <-It is commented in the original code.
-#data += '\n0-0-0' # this was added due to the way we recognise species
+data += '\n0-0-0' # this was added due to the way we recognise species
 #########################################################################################
 #                          Data preparation:
 ############### USE THESE COMMANDS IN WINDOWS SYSTEM #######################################
 #                          Open Input File
-try:
-   data = open('BURCAT_THR.txt', "r+").read()
-   data += '\n0-0-0 ' # this was added due to the way we recognise species   
-except IOError:
-   print >> sys.stderr, "File could not be opened"
-   sys.exit( 1 )
+#try:
+#   data = open('BURCAT_THR.txt', "r+").read()
+#   data += '\n0-0-0 ' # this was added due to the way we recognise species   
+#except IOError:
+#   print >> sys.stderr, "File could not be opened"
+#   sys.exit( 1 )
 #                          Open XML Output File
 #try:
 #   file = open('BURCAT_THR.xml', "w")
-   #data += '\n0-0-0 ' # this was added due to the way we recognise species   
+#   data += '\n0-0-0 ' # this was added due to the way we recognise species   
 #except IOError:
 #   print >> sys.stderr, "File could not be opened"
 #   sys.exit( 1 )
@@ -216,7 +216,7 @@ try:
    file = open('BURCAT_THR.xml', "w")
    #data += '\n0-0-0 ' # this was added due to the way we recognise species   
 except IOError:
-   print >> sys.stderr, "File could not be opened"
+   print("File could not be opened", file=sys.stderr)
    sys.exit( 1 )
 ##############################################################################################
 
@@ -272,8 +272,8 @@ class xml_generator:
     def add_specie(self, CASs_list, result_properties,phases_list):
         result = ''
         result += self.__cas_element__(CASs_list)
-        if len(strip(result_properties)) !=0:
-           result=rstrip(result)
+        if len(result_properties.strip()) !=0:
+           result=result.rstrip()
            result +=result_properties
         for phase in phases_list:
             result += self.__phase_element__(phase)
@@ -302,20 +302,20 @@ gen = xml_generator()
 ##########################################################
 #                Output Files : On Screen and saved in a XML File
 ###########################################################
-print dummy_xml_version
-print dummy_comments_code_1
-print dummy_comments_code_2
-print dummy_comments_code_3
-print '<database>'
-print >> file,dummy_xml_version
-print >> file,dummy_comments_code_1
-print >> file,'\n'
-print >> file,dummy_comments_code_2
-print >> file,'\n'
-print >> file,dummy_comments_code_3
-print >> file,'\n'
-print >> file,'<database>'
-print >> file,'\n'
+print(dummy_xml_version)
+print(dummy_comments_code_1)
+print(dummy_comments_code_2)
+print(dummy_comments_code_3)
+print('<database>')
+print(dummy_xml_version, file=file)
+print(dummy_comments_code_1, file=file)
+#print('\n', file=file)
+print(dummy_comments_code_2, file=file)
+#print('\n', file=file)
+print(dummy_comments_code_3, file=file)
+#print('\n', file=file)
+print('<database>', file=file)
+#print('\n', file=file)
 ############################################################
 for specie in species:
     CASs = re.compile(CAS_re).findall(specie)
@@ -328,7 +328,7 @@ for specie in species:
 ###############################################################################
     range_ik=[]
     specie_new=re.sub(phase_re,'', specie)     
-    specie_new=upper(specie_new)
+    specie_new=specie_new.upper()
     specie_new=fill(specie_new,width=len(specie_new))
     specie_new=re.sub(r'\s+',r' ',specie_new)
     specie_new=re.sub(r'(?:\s+=\s+|\s+=)', '=',specie_new)
@@ -474,13 +474,13 @@ for specie in species:
                    p=re.findall(dummy_3[ik],specie_new)
                    if  p != []:
                          for i in range(len(p)):
-                             pp1=pv1.match(strip(str(p[i])))
+                             pp1=pv1.match(str(p[i]).strip())
                              if pp1 !=None :
                                 op0.append(p[i])
                          if op0 !=[]:
-                            op00=join(op0)
+                            op00=''.join(op0)
                             op00=fill(op00,width=len(op00))
-                            op00=strip(op00)
+                            op00=op00.strip()
                             op00=re.sub(r'\s+',' ',op00)
                             op_dummy_v1=re.findall(r'(?<=V1\=)(?:[0-9\-\.\s]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',op00)
                             op00=re.sub(r'(?:V1\=)(?:[0-9\-\.\s]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',' ',op00)
@@ -491,14 +491,14 @@ for specie in species:
                             op00=re.sub(r'(?:V\(1\)\=)(?:[A-Z0-9\.\-]*\s|[0-9\-\.\s\(\)]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',' ',op00)
                             op_dummy_v_1_ii=re.findall(r'(?<=V\(1\))(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',op00)
                             op00=re.sub(r'(?:V\(1\))(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',' ',op00)
-                            op00=strip(op00)
+                            op00=op00.strip()
                             op_dummyv1=re.findall(r'(?<=V)(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',op00)
                             op_dummy_v1.extend(op_dummy_v1_)
                             op_dummy_v1.extend(op_dummy_v_1_)
                             op_dummy_v1.extend(op_dummy_v_1_ii)
                             op_dummy_v1.extend(op_dummyv3)
                             op00=re.sub(r'(?:V)(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)','',op00)
-                            op00=strip(op00)
+                            op00=op00.strip()
                             p=[]
                             p=op_dummy_v1
                             dummy_group_name=dummy_1[ik]
@@ -509,13 +509,13 @@ for specie in species:
                    p=re.findall(dummy_3[ik],specie_new)
                    if p != []:
                          for i in range(len(p)):
-                             pp2=pv2.match(strip(str(p[i])))
+                             pp2=pv2.match(str(p[i]).strip())
                              if pp2 !=None :
                                 op0.append(p[i])
                          if op0 !=[]:
-                            op00=join(op0)
+                            op00=''.join(op0)
                             op00=fill(op00,width=len(op00))
-                            op00=strip(op00)
+                            op00=op00.strip()
                             op00=re.sub(r'\s+',' ',op00)
                             op_dummy_v2=re.findall(r'(?<=V2\=)(?:[0-9\-\.\s]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',op00)
                             op00=re.sub(r'(?:V2\=)(?:[0-9\-\.\s]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',' ',op00)
@@ -526,14 +526,14 @@ for specie in species:
                             op00=re.sub(r'(?:V\(2\)\=)(?:[A-Z0-9\.\-]*\s|[0-9\-\.\s\(\)]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',' ',op00)
                             op_dummy_v_2_ii=re.findall(r'(?<=V\(2\))(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',op00)
                             op00=re.sub(r'(?:V\(2\))(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',' ',op00)
-                            op00=strip(op00)
+                            op00=op00.strip()
                             op_dummyv2=re.findall(r'(?<=V)(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',op00)
                             op_dummy_v2.extend(op_dummy_v2_)
                             op_dummy_v2.extend(op_dummy_v_2_)
                             op_dummy_v2.extend(op_dummy_v_2_ii)
                             op_dummy_v2.extend(op_dummyv2)
                             op00=re.sub(r'(?:V)(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)','',op00)
-                            op00=strip(op00)
+                            op00=op00.strip()
                             p=[]
                             p=op_dummy_v2
                             dummy_group_name=dummy_1[ik]
@@ -544,13 +544,13 @@ for specie in species:
                    p=re.findall(dummy_3[ik],specie_new)
                    if p != []:
                          for i in range(len(p)):
-                             pp3=pv3.match(strip(str(p[i])))
+                             pp3=pv3.match(str(p[i]).strip())
                              if pp3 !=None :
                                 op0.append(p[i])
                          if op0 !=[]:
-                            op00=join(op0)
+                            op00=''.join(op0)
                             op00=fill(op00,width=len(op00))
-                            op00=strip(op00)
+                            op00=op00.strip()
                             op00=re.sub(r'\s+',' ',op00)
                             op_dummy_v3=re.findall(r'(?<=V3\=)(?:[0-9\-\.\s]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',op00)
                             op00=re.sub(r'(?:V3\=)(?:[0-9\-\.\s]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',' ',op00)
@@ -561,14 +561,14 @@ for specie in species:
                             op00=re.sub(r'(?:V\(3\)\=)(?:[A-Z0-9\.\-]*\s|[0-9\-\.\s\(\)]*)(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-\.]*)(?=\s|)',' ',op00)
                             op_dummy_v_3_ii=re.findall(r'(?<=V\(3\))(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',op00)
                             op00=re.sub(r'(?:V\(3\))(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',' ',op00)
-                            op00=strip(op00)
+                            op00=op00.strip()
                             op_dummyv3=re.findall(r'(?<=V)(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)',op00)
                             op_dummy_v3.extend(op_dummy_v3_)
                             op_dummy_v3.extend(op_dummy_v_3_)
                             op_dummy_v3.extend(op_dummy_v_3_ii)
                             op_dummy_v3.extend(op_dummyv3)
                             op00=re.sub(r'(?:V)(?:\=|\s+|)(?:[A-Z0-9\=]*|[\sA-Z0-9\=]*|[\-\+\(\)A-Z0-9\=]*)(?:[0-9\.])(?:[CM KCAL CAL \/ MOLE KJ\/MOLE \s 0-9\-]*)','',op00)
-                            op00=strip(op00)
+                            op00=op00.strip()
                             p=[]
                             p=op_dummy_v3
                             dummy_group_name=dummy_1[ik]
@@ -601,7 +601,7 @@ for specie in species:
                else:   
                    specie_new_fornastru=re.sub(dummy_3_d[ik],'final',specie_new_fornastru)
                    specie_new=re.sub(dummy_3_d[ik],'',specie_new)
-               result_properties+= '    </' +lower(dummy_xml_propierty) + '>\n'
+               result_properties+= '    </' +dummy_xml_propierty.lower() + '>\n'
                p.reverse()
                for jk in range(length_string):
                     if dummy_2[ik]=='REFERENCE':
@@ -616,16 +616,16 @@ for specie in species:
                        p[jk]=re.sub('&', '&amp;', p[jk])
                     if dummy_2[ik]=='FORMULA_NAME_STRUCTURE':
                        p[jk]=re.sub('&', '&amp;', p[jk])
-                    result_properties += '       <' + lower(dummy_xml_propierty)+'_'+str(length_string-jk) + '>'+ strip(p[jk]) + '</' + lower(dummy_xml_propierty) + '_'+str(length_string-jk)+'>' +'\n'     
-               result_properties=result_properties + '    <' + lower(dummy_xml_propierty) + '>\n'                
-    result_properties=split(result_properties,sep='\n')
+                    result_properties += '       <' + dummy_xml_propierty.lower()+'_'+str(length_string-jk) + '>'+ p[jk].strip() + '</' + dummy_xml_propierty.lower() + '_'+str(length_string-jk)+'>' +'\n'     
+               result_properties=result_properties + '    <' + dummy_xml_propierty.lower() + '>\n'                
+    result_properties=result_properties.split(sep='\n')
     result_properties.reverse()
     ij_result_properties=[]
     lij_result_properties=0
     for x in result_properties[:]: # make a slice copy of the entire list
         resultados.append(x)
     for opq in range(len(resultados)):
-        resultados[opq]=strip(str(resultados[opq])) 
+        resultados[opq]=str(resultados[opq]).strip()
     if resultados.count('<hf0>') !=0:
          index_insert_reference=resultados.index('<hf0>')
     elif resultados.count('<hf298>') !=0:
@@ -647,14 +647,14 @@ for specie in species:
                         for nml in range(length_string_reference):
                             v=label_number_string_reference[nml] + '>'     
                             dummy_reference_xml_tag_p=dummy_reference_xml_tag[lmn] + v
-                            h_result_properties_find=find(strip(k_result_properties_string),dummy_reference_xml_tag_p)
+                            h_result_properties_find=k_result_properties_string.strip().find(dummy_reference_xml_tag_p)
                             dummy_reference_xml_tag_p=''
                             if h_result_properties_find !=-1:
                                ij_result_properties.append(il)
                                lij_result_properties=lij_result_properties+1        
                      else:
                          dummy_reference_xml_tag_p=dummy_reference_xml_tag[lmn]
-                         h_result_properties_find=find(strip(k_result_properties_string),dummy_reference_xml_tag_p)
+                         h_result_properties_find=k_result_properties_string.strip().find(dummy_reference_xml_tag_p)
                          if h_result_properties_find !=-1:
                             ij_result_properties.append(il)
                             lij_result_properties=lij_result_properties+1
@@ -665,7 +665,7 @@ for specie in species:
     while  lij_result_properties > 0:
         result_properties.remove(result_properties[ij_result_properties[0]])
         lij_result_properties-=1
-    result_properties=join(result_properties,sep='\n')
+    result_properties='\n'.join(result_properties)
     for phase in phases:
         phde = phase_desc()
         phase = phase.expandtabs()
@@ -674,13 +674,13 @@ for specie in species:
         phde_list.append(phde)
     result_properties= result_properties + '\n'
     a = gen.add_specie(CASs, result_properties,phde_list)
-    print a
-    print >> file,'\n'
-    print >> file,a
-    print >> file,'\n'
-print '</database>'
+    print(a)
+    #print('\n', file=file)
+    print(a, file=file)
+    #print('\n', file=file)
+print('</database>')
 # file.write('\n')
-print >> file,'</database>'
+print('</database>', file=file)
 file.close()
 # Correction to the database that have to be made in order that this program will run:
 # Replace 50888=73-8 with 50888-73-8C6H11  2M2en4yl
